{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://burgershop/./src/js/server/server.js","webpack://burgershop/./src/js/modules/createBurger.js","webpack://burgershop/./src/js/modules/hideBasket.js","webpack://burgershop/./src/js/modules/couting.js","webpack://burgershop/./src/js/script.js","webpack://burgershop/./src/js/modules/counter.js","webpack://burgershop/./src/js/modules/removeCart.js","webpack://burgershop/./src/js/modules/cart.js"],"sourcesContent":["async function getBurgers(url){\r\n\r\n    let res = await fetch(url);\r\n\r\n    if(!res.ok){\r\n        throw new Error(`url: ${url}, status: ${res.status}`);\r\n    }\r\n\r\n    return await res.json();\r\n}\r\n\r\nexport default getBurgers;","import getBurgers from '../server/server';\r\n\r\nfunction createBurger(){\r\n\r\n    // Получение элемента родителя\r\n    const burgerWrapper = document.querySelector('.burgers__list');\r\n\r\n    // Получение данных и отправка в createBurger\r\n    getBurgers('../data.json')\r\n        .then(data => createBurger(data))\r\n        .catch(() => console.log('error'));\r\n\r\n    function createBurger(data){\r\n        const wrapper = data.burgers.map(({img, name, pieces, gram, price, id}) => {\r\n\r\n            // Создание блока\r\n            const li = document.createElement('li');\r\n\r\n            // Добовление классов\r\n            li.classList.add('burgers__item', 'wow', 'animate__animated', 'animate__fadeInUp');\r\n\r\n            // Создание атрибута\r\n            li.setAttribute('data-burger', id);\r\n\r\n            // Заполнение контента\r\n            li.innerHTML = `\r\n            <div class=\"burgers__photo\">\r\n                <img src=${img} alt=\"burger\">\r\n            </div>\r\n            <h3 class=\"burgers__name\">${name}</h3>\r\n            <span class=\"burgers__pieces\">${pieces} шт.</span>\r\n            <div class=\"burgers__description\">\r\n                <div class=\"burgers__quantity\">\r\n                    <div class=\"burgers__minus btn__current\" data-action=\"minus\"></div>\r\n                    <p data-current class=\"burgers__current\">1</p>\r\n                    <div class=\"burgers__plus btn__current\" data-action=\"plus\"></div>\r\n                </div>\r\n                <div class=\"burgers__specification\">\r\n                    <p class=\"burgers__gram\">${gram}г.</p>\r\n                    <p class=\"burgers__price\">${price}₽</p>\r\n                </div>\r\n            </div>\r\n            <button data-cart class=\"burgers__add\">\r\n                Добавить в корзину\r\n            </button>\r\n            `;\r\n\r\n            burgerWrapper.appendChild(li);\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default createBurger;","function hideBasket(){\r\n    const cartWrapper = document.querySelectorAll('.basket__item'),\r\n          basketEmpty = document.querySelector('.basket__empty'),\r\n          basketForm = document.querySelector('.basket form'),\r\n          result = document.querySelector('.basket__result__price');\r\n\r\n    if(cartWrapper.length === 0){\r\n        basketEmpty.style.display = 'block';\r\n        basketForm.style.display = 'none';\r\n        result.innerText = '0₽';\r\n    } else {\r\n        basketEmpty.style.display = 'none';\r\n        basketForm.style.display = 'block';\r\n    }\r\n}\r\n\r\nexport default hideBasket;","function couting(){\r\n\r\n    // Получение всех карточек\r\n    const carts = document.querySelectorAll('.basket__item'),\r\n          result = document.querySelector('.basket__result__price');\r\n\r\n    let price = 0;\r\n    console.log(1);\r\n\r\n    // Перебор каждой карточки\r\n    carts.forEach(cart => {\r\n        const current = cart.querySelector('[data-current]').innerText,\r\n              basketPrice = cart.querySelector('.basket__price').innerText;\r\n\r\n\r\n        price = parseInt(current) * parseInt(basketPrice) + price;\r\n    });\r\n\r\n    result.innerText = price + '₽';\r\n\r\n}\r\n\r\nexport default couting;","import createBurger from './modules/createBurger';\r\nimport counter from './modules/counter';\r\nimport cart from './modules/cart';\r\nimport hideBasket from './modules/hideBasket';\r\n\r\ndocument.addEventListener('DOMContentLoaded', function(){\r\n    createBurger();      \r\n    hideBasket();\r\n    counter();\r\n    cart();\r\n});","import removeCart from './removeCart';\r\nimport hideBasket from './hideBasket';\r\nimport couting from './couting';\r\n\r\nfunction counter(){\r\n    window.addEventListener('click', function(e){\r\n\r\n        let current;\r\n\r\n        if(e.target.dataset.action === 'plus' || e.target.dataset.action === 'minus'){\r\n\r\n            // Получение родителя \r\n            const counterWrapper = e.target.closest('.burgers__quantity');\r\n\r\n            // Пойск значения\r\n            current = counterWrapper.querySelector('[data-current]');\r\n        }\r\n\r\n        if(e.target.dataset.action === 'plus'){\r\n\r\n            // Увеличить значение на ед.\r\n            current.innerText = ++current.innerText;\r\n\r\n            // Итоговый подсчёт \r\n            couting();\r\n        }\r\n\r\n        if(e.target.dataset.action === 'minus'){\r\n            // Проверка числа\r\n            if(+current.innerText > 1){\r\n\r\n                // Уменьшить значение на ед.\r\n                current.innerText = --current.innerText;\r\n\r\n                 // Итоговый подсчёт \r\n                 couting();\r\n            } else{\r\n                // Удалить корзину\r\n                removeCart(e.target);\r\n\r\n                // Скрыть \"Корзина пуста\"\r\n                hideBasket();\r\n            }\r\n        }\r\n\r\n    });\r\n}   \r\n\r\nexport default counter;","function removeCart(tar){\r\n    const cart = tar.closest('.basket__item');\r\n    if(cart)cart.remove(); \r\n}\r\n\r\nexport default removeCart;","import hideBasket from \"./hideBasket\";\r\nimport couting from \"./couting\";\r\n\r\nfunction cart(){\r\n    window.addEventListener('click', function(e){\r\n\r\n        // Проверяем нажатие на кнопку\r\n        if(e.target.hasAttribute('data-cart')){\r\n\r\n            // Получение элемента родителя\r\n            const cartWrapper = document.querySelector('.basket__list');\r\n\r\n            // Получаем элемент\r\n            const cart = e.target.closest('.burgers__item');\r\n\r\n            // Все данные записываем в объект\r\n            const cartInfo = {\r\n                id: cart.getAttribute('data-burger'),\r\n                img: cart.querySelector('.burgers__photo img').getAttribute('src'),\r\n                title: cart.querySelector('.burgers__name').innerText,\r\n                current: cart.querySelector('[data-current]').innerText,\r\n                gram: cart.querySelector('.burgers__gram').innerText,\r\n                pieces: cart.querySelector('.burgers__pieces').innerText,\r\n                price: cart.querySelector('.burgers__price').innerText\r\n            }\r\n\r\n            const cartItem = cartWrapper.querySelector(`[data-basket=\"${cartInfo.id}\"]`);\r\n\r\n            // Проверяем есть ли карточка или нет\r\n            if(cartItem){\r\n\r\n            // Если есть то добовляем current к CardInfo\r\n            const current = cartItem.querySelector('[data-current]');\r\n            current.innerText = +current.innerText + +cartInfo.current;\r\n            } else{\r\n            \r\n            // Если нету то создаем новую карточку\r\n            const cardHTML = `\r\n                <li class=\"basket__item\" data-basket=${cartInfo.id}>\r\n                <div class=\"basket__photo\">\r\n                    <img src=${cartInfo.img} alt=${cartInfo.title}>\r\n                </div>\r\n                <div class=\"basket__description\">\r\n                    <h2 class=\"basket__name\">${cartInfo.title}</h2>\r\n                    <span class=\"basket__pieces\">${cartInfo.pieces}/</span>\r\n                    <span class=\"basket__gram\">${cartInfo.gram}</span>\r\n                    <div class=\"basket__specification\">\r\n                        <div class=\"burgers__quantity\">\r\n                            <div class=\"burgers__minus btn__current\" data-action=\"minus\"></div>\r\n                            <p data-current class=\"burgers__current\">${cartInfo.current}</p>\r\n                            <div class=\"burgers__plus btn__current\" data-action=\"plus\"></div>\r\n                        </div>\r\n                        <p class=\"basket__price\">${cartInfo.price}</p>\r\n                    </div>\r\n                </div>\r\n            </li>`;\r\n            \r\n            cartWrapper.insertAdjacentHTML('beforeend', cardHTML);\r\n            }\r\n\r\n            // Сбрасываем счетчик \r\n            cart.querySelector('[data-current]').innerText = '1';\r\n\r\n            // Скрыть \"Корзина пуста\"\r\n            hideBasket();\r\n\r\n            // Итоговый подсчёт \r\n            couting();\r\n\r\n        }\r\n\r\n    });\r\n}\r\n\r\nexport default cart;"],"names":["burgerWrapper","document","querySelector","async","url","res","fetch","ok","Error","status","json","then","data","burgers","map","img","name","pieces","gram","price","id","li","createElement","classList","add","setAttribute","innerHTML","appendChild","createBurger","catch","console","log","cartWrapper","querySelectorAll","basketEmpty","basketForm","result","length","style","display","innerText","carts","forEach","cart","current","basketPrice","parseInt","addEventListener","window","e","target","dataset","action","closest","tar","remove","hasAttribute","cartInfo","getAttribute","title","cartItem","cardHTML","insertAdjacentHTML"],"sourceRoot":""}